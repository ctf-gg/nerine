---
import Layout from "../layouts/Layout.astro";
import { getVerificationDetails, isError } from "../api";

const url = new URL(Astro.request.url);
const token = url.searchParams.get("token");

if (!token) {
  return Astro.redirect("/register");
}

const detailsRes = await getVerificationDetails(token);

if (isError(detailsRes)) {
  return Astro.redirect("/register");
}

let title = "Verify Action";
let confirmationText = "";
let buttonText = "Verify";
let pageVerificationType: "registration" | "email_update";

if (detailsRes.verification_type === "team_registration") {
  title = "Verify Email for Registration";
  confirmationText = `Are you sure you want to register team "<strong>${detailsRes.name}</strong>" with email "<strong>${detailsRes.email}</strong>"?`;
  buttonText = "Verify and Register";
  pageVerificationType = "registration";
} else if (detailsRes.verification_type === "email_update") {
  title = "Verify New Email Address";
  confirmationText = `Are you sure you want to update your email to "<strong>${detailsRes.new_email}</strong>" for team "<strong>${detailsRes.name}</strong>"?`;
  buttonText = "Verify Email Update";
  pageVerificationType = "email_update";
} else {
  return Astro.redirect("/register");
}
---

<Layout>
  <h1 class="heading">{title}</h1>
  <div id="confirmation-section">
    <p class="confirmation-text" set:html={confirmationText} />
    <form
      id="verify-form"
      data-client-verification-type={pageVerificationType}
      data-verification-token={token}
    >
      <button type="submit">{buttonText}</button>
    </form>
  </div>
  <script>
    import { verifyEmail, verifyEmailUpdate, isError } from "../api";

    const verifyForm = document.getElementById(
      "verify-form",
    ) as HTMLFormElement;

    if (verifyForm) {
      const clientVerificationType = verifyForm.dataset.clientVerificationType;
      const verificationToken = verifyForm.dataset.verificationToken;

      verifyForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        if (!clientVerificationType || !verificationToken) {
          alert("Missing verification details.");
          window.location.href = "/register";
          return;
        }

        let verifyRes;
        if (clientVerificationType === "registration") {
          verifyRes = await verifyEmail(verificationToken);
        } else if (clientVerificationType === "email_update") {
          verifyRes = await verifyEmailUpdate(verificationToken);
        } else {
          alert("Unknown verification type.");
          window.location.href = "/register";
          return;
        }

        if (isError(verifyRes)) {
          alert(`Verification failed: ${verifyRes.message}`);
          window.location.href = "/register";
        } else {
          window.location.href = `/profile/${verifyRes.id}`;
        }
      });
    }
  </script>
</Layout>

<style>
  form {
    margin-top: 1rem;
    display: flex;
    justify-content: center;
  }

  .confirmation-text {
    font-family: "Satoshi", sans-serif;
    text-align: center;
    margin-bottom: 3rem;
  }
</style>
