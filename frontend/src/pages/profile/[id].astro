---
export const prerender = false;
import { isError, profile } from "../../api";
import PrivateProfileDetails from "../../components/PrivateProfileDetails.svelte";
import Layout from "../../layouts/Layout.astro";
import { jwtDecode } from "jwt-decode";

const { id } = Astro.params;
const token = Astro.cookies.get("token")?.value;

if (!id || !token) return Astro.redirect("/", 307);

if (id === "me")
  return Astro.redirect(
    `/profile/${jwtDecode<{ team_id: string }>(token).team_id}`
  );
const prof = await profile(id, token);
if (isError(prof)) {
  if (prof.error === "invalid_token") return Astro.redirect("/login", 304);
  else return new Response("profile not found", { status: 404 });
}
---

<Layout>
  <h1 class="heading">{prof.name}</h1>
  {prof.type === "private" && <PrivateProfileDetails client:load prof={prof} />}

  <div class="stats">
    Rank {prof.rank} / {prof.score} points
  </div>
  <div class="solves">
    <h2>Solves:</h2>
    <ul>
      {
        prof.solves.map((solve) => (
          <li class="solve">
            <span>{solve.name}</span>
            <span>{solve.points} pts</span>
          </li>
        ))
      }
    </ul>
  </div>
</Layout>

<style>
  .solves {
    margin-top: 2rem;
    font-family: "Smiley Sans", sans-serif;

    h2 {
      font-size: 3rem;
      text-align: center;
    }

    ul {
      display: flex;
      flex-direction: column;
      padding: 0;
    }

    .solve {
      list-style: none;
      font-size: 1.75rem;
      display: flex;
      justify-content: space-between;
    }
  }
</style>
