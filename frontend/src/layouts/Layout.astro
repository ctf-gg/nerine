---
import { jwtDecode } from "jwt-decode";
import { isError, profile } from "../api";
import "../base.css";
import { ClientRouter } from "astro:transitions";

const token = Astro.cookies.get("token")?.value;
let currentTeam = token ? await profile(jwtDecode<{ team_id: string }>(token).team_id, token) : null;
if (currentTeam != null && isError(currentTeam)) currentTeam = null;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />
    <link rel="preload" href="/fonts/SmileySans.otf" as="font" type="font/otf" crossorigin="anonymous">
    <link rel="preload" href="/fonts/Satoshi-Variable.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <meta name="generator" content={Astro.generator} />
    <ClientRouter />
    <title>smileyCTF</title>
  </head>
  <body>
    <div class="navbar">
      <!-- placeholder -->
      <ul></ul>
      <ul>
        <li><a href="/">home</a></li>
        <li><a href="/challenges">challenges</a></li>
        <li><a href="/leaderboard">leaderboard</a></li>
      </ul>
      <ul class="end">
        {
          token ? (
            <>
              <li>
                {currentTeam!.name}
              </li>
              <li>
                <a href="/profile/me">profile</a>
              </li>
              <li>
                <a href="/logout">logout</a>
              </li>
            </>
          ) : (
            <>
              <li>
                <a href="/login">login</a>
              </li>
              <li>
                <a href="/register">register</a>
              </li>
            </>
          )
        }
      </ul>
    </div>
    <div class="content">
      <slot />
    </div>
  </body>
</html>
<style>
  .navbar {
    font-size: 1.5rem;
    border-image: url("/border-big-off-white.png") 12 / 8px round;
    border-image-outset: 2px;
    background-color: #e6e6d2;
    padding: 1rem;
    margin-bottom: 2rem;
    display: grid;
    align-items: center;
    grid-template-columns: 1fr 2fr 1fr;

    ul {
      display: flex;
      gap: 1rem;
      align-items: center;
      justify-content: center;
    }

    :nth-child(1) {
      justify-self: start;
    }

    :nth-child(2) {
      justify-self: center;
    }

    :nth-child(3) {
      justify-self: end;
    }

    li {
      list-style: none;
    }

    a {
      color: inherit;
    }
  }
  .content {
    max-width: 100ch;
    margin: auto;
  }
</style>
