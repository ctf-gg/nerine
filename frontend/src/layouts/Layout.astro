---
import { jwtDecode } from "jwt-decode";
import { isError, profile } from "../api";
import "../base.css";
import { ClientRouter } from "astro:transitions";

const token = Astro.cookies.get("token")?.value;
let currentTeam = token
  ? await profile(jwtDecode<{ team_id: string }>(token).team_id, token)
  : null;
if (currentTeam != null && isError(currentTeam)) currentTeam = null;
---

<!doctype html>
<html lang="en" transition:animate="none">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />
    <link
      rel="preload"
      href="/fonts/SmileySans.otf"
      as="font"
      type="font/otf"
      crossorigin="anonymous"
    />
    <link
      rel="preload"
      href="/fonts/Satoshi-Variable.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />
    <meta name="generator" content={Astro.generator} />
    <meta property="og:title" content="smileyCTF" />
    <meta
      property="og:description"
      content="Join us for smileyCTF, the inaugural CTF hosted by .;,;. â€” America's #1 CTF team*!"
    />
    <meta property="og:image" content="https://play.ctf.gg/opengraph.png" />
    <meta property="og:url" content="https://play.ctf.gg" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <ClientRouter />
    <title>smileyCTF</title>
  </head>
  <body>
    <div class="navbar">
      <div class="nav-end-spacer"></div>

      <ul class="nav-main-links">
        <li><a href="/">home</a></li>
        <li><a href="/challenges">challenges</a></li>
        <li><a href="/leaderboard">leaderboard</a></li>
      </ul>

      <div class="nav-auth-area">
        <button
          class="mobile-auth-toggle"
          aria-expanded="false"
          aria-controls="auth-menu-items"
        >
          <span class="sr-only">Toggle user menu</span>
          <span class="chevron-down-icon">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-chevron-down-icon lucide-chevron-down"
              ><path d="m6 9 6 6 6-6"></path></svg
            >
          </span>
          <span class="chevron-up-icon">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="lucide lucide-chevron-up-icon lucide-chevron-up"
              ><path d="m18 15-6-6-6 6"></path></svg
            >
          </span>
        </button>
        <ul class="auth-menu-items" id="auth-menu-items">
          {
            currentTeam ? (
              <>
                <li>{currentTeam.name}</li>
                <li>
                  <a href="/profile/me">profile</a>
                </li>
                <li>
                  <a href="/logout">logout</a>
                </li>
              </>
            ) : (
              <>
                <li>
                  <a href="/login">login</a>
                </li>
                <li>
                  <a href="/register">register</a>
                </li>
              </>
            )
          }
        </ul>
      </div>
    </div>
    <div class="content">
      <slot />
    </div>
    <!-- <footer>
      <p class="footer-text">
        &copy; 2025 smiley foundation &bull; Powered by sCTF
      </p>
    </footer> -->
  </body>
</html>
<style>
  body {
    min-height: 100vh;
  }

  .navbar {
    font-size: 1.5rem;
    border-image: url("/border-big-off-white.png") 12 / 8px round;
    border-image-outset: 2px;
    background-color: #e6e6d2;
    padding: 1rem;
    margin-bottom: 2rem;
    position: relative;

    display: grid;
    align-items: center;
    grid-template-columns: 1fr auto 1fr;
  }

  .nav-end-spacer {
    justify-self: start;
  }

  .nav-main-links {
    justify-self: center;
    display: flex;
    gap: 1.5rem;
    align-items: center;
    list-style: none;
    padding: 0;
    margin: 0;

    a {
      color: inherit;
    }
  }

  .nav-auth-area {
    justify-self: end;
    position: relative;
    display: flex;
    align-items: center;
  }

  .mobile-auth-toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 10px;
    z-index: 1001;
    line-height: 1;
  }

  .chevron-up-icon,
  .chevron-down-icon {
    color: black;
  }

  .mobile-auth-toggle .chevron-up-icon {
    display: none !important;
  }

  .mobile-auth-toggle.open .chevron-down-icon {
    display: none !important;
  }

  .mobile-auth-toggle.open .chevron-up-icon {
    display: inline !important;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .auth-menu-items {
    display: flex;
    gap: 1rem;
    align-items: center;
    list-style: none;
    padding: 0;
    margin: 0;

    a,
    li {
      color: inherit;
    }
  }

  .content {
    max-width: 140ch;
    margin: auto;
    margin-bottom: 8rem;
  }

  footer {
    text-align: center;
    padding: 1rem;
    background-color: #e6e6d2;
    bottom: 0;
    left: 0;
    width: 100%;
    border-image: url("/border-big-off-white.png") 12 / 8px round;
    border-image-outset: 2px;
    margin-top: 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .discord-icon {
    width: 24px;
    height: 24px;
  }

  .footer-text {
    margin: 0;
  }

  @media (max-width: 768px) {
    .navbar {
      grid-template-columns: auto 1fr auto;
    }

    .nav-end-spacer {
      min-width: 45px;
      visibility: hidden;
    }

    .nav-main-links {
      grid-column: 2 / 3;
      gap: 1rem;
      font-size: 1.25rem;
    }

    .mobile-auth-toggle {
      display: block;
    }

    .auth-menu-items {
      display: none;
      position: absolute;
      top: 100%;
      left: auto;
      right: 0;
      background-color: #e6e6d2;
      border-image: url("/border-big-off-white.png") 12 / 8px round;
      border-image-outset: 2px;
      border-top: none;
      padding: 1rem;
      flex-direction: column;
      gap: 0.75rem;
      z-index: 1000;
      min-width: 180px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .auth-menu-items.open {
      display: flex;
    }
  }

  @media (max-width: 1120px) {
    .content {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }
</style>

<script is:inline data-astro-rerun>
  function initDropdown() {
    const authToggleButton = document.querySelector(".mobile-auth-toggle");
    const authMenuItems = document.querySelector(".auth-menu-items");

    if (authToggleButton && authMenuItems) {
      authToggleButton.addEventListener("click", (event) => {
        event.stopPropagation();
        const isOpened = authMenuItems.classList.toggle("open");
        authToggleButton.classList.toggle("open");
        authToggleButton.setAttribute("aria-expanded", isOpened.toString());
      });

      authMenuItems.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", () => {
          if (authMenuItems.classList.contains("open")) {
            authMenuItems.classList.remove("open");
            authToggleButton.classList.remove("open");
            authToggleButton.setAttribute("aria-expanded", "false");
          }
        });
      });

      document.addEventListener("click", (event) => {
        const target = event.target;
        if (
          authMenuItems.classList.contains("open") &&
          target instanceof Node &&
          !authMenuItems.contains(target) &&
          !authToggleButton.contains(target)
        ) {
          authMenuItems.classList.remove("open");
          authToggleButton.classList.remove("open");
          authToggleButton.setAttribute("aria-expanded", "false");
        }
      });
    }
  }

  initDropdown();
</script>
